// <auto-generated />
using System;
using DiyetProje.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiyetProje.DAL.Migrations
{
    [DbContext(typeof(DiyetDbContext))]
    [Migration("20240813101542_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiyetProje.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "İçecekler",
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 874, DateTimeKind.Local).AddTicks(89),
                            Description = "Alkolsüz içecekler, kahveler, çaylar",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Süt Ürünleri",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Süt, yoğurt, peynir, CreatedDate = DateTime.Now, Status = Enums.DataStatus.Added",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Kurutulmuş Meyve",
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 874, DateTimeKind.Local).AddTicks(92),
                            Description = "Kayısı, incir, üzüm, hurma",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Şekerlemeler",
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 874, DateTimeKind.Local).AddTicks(94),
                            Description = "Helva, Pişmaniye",
                            Status = 1
                        });
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 874, DateTimeKind.Local).AddTicks(42),
                            Description = "Saat aralığı: 07:00 - 11:00",
                            MealName = "Sabah",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 874, DateTimeKind.Local).AddTicks(46),
                            Description = "Saat aralığı: 11:00 - 13:00",
                            MealName = "Öğle",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 874, DateTimeKind.Local).AddTicks(48),
                            Description = "Saat aralığı: 17:00 - 20:00",
                            MealName = "Akşam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PortionUnit")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "1 litre su 1 porsiyona denk",
                            PortionUnit = 1,
                            ProductName = "Su",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "4 tane kayısı 1 porsiyona denk",
                            PortionUnit = 1,
                            ProductName = "Kayısı",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2 dilim elma 1 porsiyona denk",
                            PortionUnit = 1,
                            ProductName = "Elma",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "350 gram pişmaniye 1 porsiyona denk",
                            PortionUnit = 1,
                            ProductName = "Pişmaniye",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            CreatedDate = new DateTime(2024, 8, 13, 13, 15, 41, 873, DateTimeKind.Local).AddTicks(9724),
                            Email = "admin@bilgeadam.com",
                            FirstName = "Bilge",
                            Gender = "Kadın",
                            Height = 180.0,
                            IsAdministrator = true,
                            LastName = "Adam",
                            Password = "123",
                            Status = 1,
                            Weight = 60.0
                        });
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.UserMealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMealProducts");
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.Product", b =>
                {
                    b.HasOne("DiyetProje.DAL.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.UserMealProduct", b =>
                {
                    b.HasOne("DiyetProje.DAL.Entities.Meal", "Meal")
                        .WithMany("UserMealProducts")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetProje.DAL.Entities.Product", "Product")
                        .WithMany("UserMealProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiyetProje.DAL.Entities.User", "User")
                        .WithMany("UserMealProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.Meal", b =>
                {
                    b.Navigation("UserMealProducts");
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.Product", b =>
                {
                    b.Navigation("UserMealProducts");
                });

            modelBuilder.Entity("DiyetProje.DAL.Entities.User", b =>
                {
                    b.Navigation("UserMealProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
